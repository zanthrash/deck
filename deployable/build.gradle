buildscript {
  repositories {
    jcenter()
    maven { url "http://dl.bintray.com/spinnaker/gradle" }
  }
  dependencies {
    classpath 'com.netflix.spinnaker.gradle:spinnaker-gradle-project:3.1.0'
    classpath 'com.moowork.gradle:gradle-node-plugin:0.8'
    classpath 'be.filipblondeel.gradle:gradle-gulp-plugin:0.1'
  }
}

group = "com.netflix.spinnaker.deck"

apply plugin: 'spinnaker.project'
apply plugin: 'nebula.ospackage'
apply plugin: 'com.moowork.node'
apply plugin: 'java'

jar {
  dependsOn('webpack')
  from(fileTree("build/webpack")) {
    into "META-INF/resources"
  }
}

node {
    // Version of node to use.
    version = '0.12.3'
    npmVersion = '2.8.3'

    // Enabled the automatic download. False is the default (for now).
    download = true
}

task webpack(type: NodeTask) {
  workingDir '.'
  script = file('node_modules/webpack/bin/webpack.js')
  environment = [
    "GATE_HOST": "spinnaker-api-prestaging.prod.netflix.net",
  ]
}

task karma(type: NodeTask) {
  script = file('node_modules/karma/bin/karma')
  args = ["start", "--single-run", "--reporters", "progress,jenkins"]
}

webpack.outputs.dir file('build/webpack')

webpack.dependsOn 'npmInstall'
karma.dependsOn 'webpack'
test.dependsOn 'karma'
buildDeb.dependsOn 'test'

String toVers(String v) {
  int idx = v.indexOf('-')
  if (idx != -1) {
    return v.substring(0, idx)
  }
  return v
}

ospackage {
  packageName = "spinnaker-deck"
  version = toVers(project.version.toString())
  release '3'
  into "/var/www"
  requires "apache2"
  from "build/webpack"
}
